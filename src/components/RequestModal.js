// RequestModal.js  (src/components)
import React, { useState } from "react";
import emailjs from "emailjs-com";          // ‚Üê 1) –∏–º–ø–æ—Ä—Ç emailjs

function RequestModal({ factoryName, onClose }) {
  const [step, setStep]   = useState(0);      // 0-–¥–∞–Ω–Ω—ã–µ, 1-–∫–∞–ª–µ–Ω–¥–∞—Ä—å, 2-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  const today             = new Date().toISOString().split("T")[0];

  const [form, setForm] = useState({
    name:    "",
    phone:   "",
    wechat:  "",
    city:    "–ö–æ—Å—Ç–∞–Ω–∞–π",
    cargo:   "–ö–æ—Ä–º–æ–≤–∞—è –º—É–∫–∞",
    station: "–•–æ—Ä–≥–æ—Å",
    planGU:  "–ù–µ—Ç",
    date:    today,
  });

  /* ---------------- handlers ---------------- */
  const handle = e => setForm({ ...form, [e.target.name]: e.target.value });
  const next   = () => setStep(s => s + 1);
  const back   = () => setStep(s => s - 1);

  // üëâ 2) —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
  const submit = () => {
    const payload = { ...form, factory: factoryName };

    emailjs                    //   ‚Üê –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à–∏ 3 ID
      .send(
        "service_mfs129i",     // Service ID
        "template_vixeuwf",    // Template ID
        payload,
        "5hS_rdfopL-fNCVzY"    // Public Key
      )
      .then(() => {
        alert("‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è.");
        onClose();
      })
      .catch(() => alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."));
  };

  /* ---------------- –ø—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è ---------------- */
  const canNext = () => {
    if (step === 0) return form.name && form.phone;
    if (step === 1) return !!form.date;
    return true;
  };

  /* ---------------- UI ---------------- */
  return (
    
    <div style={styles.backdrop} onClick={onClose}>
      <div style={styles.modal} onClick={e => e.stopPropagation()}>
        <h2 style={styles.title}>–ó–∞—è–≤–∫–∞ ‚Ä¢ {factoryName}</h2>
        <div style={styles.modal} className="modalMobileFix" onClick={e=>e.stopPropagation()}></div>
        

        {/* –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∞–≥–æ–≤ */}
        <div style={styles.stepsBar}>
          {["–î–∞–Ω–Ω—ã–µ", "–î–∞—Ç–∞", "–ü—Ä–æ–≤–µ—Ä–∫–∞"].map((t, i) => (
            <div key={t} style={{ ...styles.step, ...(step === i && styles.stepActive) }}>{i + 1}</div>
          ))}
        </div>

        {step === 0 && (
          <>
            <input name="name"    value={form.name}    onChange={handle} placeholder="–ò–º—è"       style={styles.input}/>
            <input name="phone"   value={form.phone}   onChange={handle} placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"   style={styles.input}/>
            <input name="wechat"  value={form.wechat}  onChange={handle} placeholder="WeChat"    style={styles.input}/>
            <select name="city"   value={form.city}    onChange={handle} style={styles.input}>
              <option>–ö–æ—Å—Ç–∞–Ω–∞–π</option><option>–†—É–¥–Ω—ã–π</option>
            </select>
            <select name="cargo"  value={form.cargo}   onChange={handle} style={styles.input}>
              <option>–ö–æ—Ä–º–æ–≤–∞—è –º—É–∫–∞</option><option>–Ø—á–º–µ–Ω—å</option>
            </select>
            <select name="station" value={form.station} onChange={handle} style={styles.input}>
              <option>–•–æ—Ä–≥–æ—Å</option><option>–ê–ª—Ç—ã–Ω–∫–æ–ª—å</option>
            </select>
            <select name="planGU" value={form.planGU}  onChange={handle} style={styles.input}>
              <option>—Å –ø–ª–∞–Ω–æ–º –ì–£</option><option>–±–µ–∑ –ø–ª–∞–Ω–∞</option>
            </select>
          </>
        )}

        {step === 1 && (
          <>
            <label style={styles.label}>–î–∞—Ç–∞ –ø–æ–≥—Ä—É–∑–∫–∏</label>
            <input type="date" name="date" min={today} value={form.date} onChange={handle} style={styles.input}/>
          </>
        )}

        {step === 2 && (
          <div style={styles.review}>
            {Object.entries({
              –ò–º—è: form.name, –¢–µ–ª–µ—Ñ–æ–Ω: form.phone, WeChat: form.wechat,
              –ì–æ—Ä–æ–¥: form.city, –ì—Ä—É–∑: form.cargo, –°—Ç–∞–Ω—Ü–∏—è: form.station,
              "–ü–ª–∞–Ω –ì–£": form.planGU, "–î–∞—Ç–∞ –ø–æ–≥—Ä—É–∑–∫–∏": form.date,
            }).map(([k,v])=> <p key={k}><strong>{k}:</strong> {v}</p>)}
          </div>
        )}

        {/* –∫–Ω–æ–ø–∫–∏ */}
        <div style={styles.btnRow}>
          <button onClick={onClose} style={styles.btnGrey}>–û—Ç–º–µ–Ω–∞</button>
          {step>0   && <button onClick={back}   style={styles.btnGrey}>–ù–∞–∑–∞–¥</button>}
          {step<2   && <button onClick={next}   disabled={!canNext()} style={{ ...styles.btnBlue, opacity: canNext()?1:.5 }}>–î–∞–ª–µ–µ</button>}
          {step===2 && <button onClick={submit} style={styles.btnBlue}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>}
        </div>
      </div>
    </div>
  );
}

/* ---------- inline-—Å—Ç–∏–ª–∏ ---------- */
const styles = {
  backdrop:{position:"fixed",inset:0,background:"rgba(0,0,0,.45)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:1000},
  modal:{background:"#fff",borderRadius:12,padding:24,width:"95%",maxWidth:480,boxShadow:"0 10px 30px rgba(0,0,0,.2)"},
  title:{margin:0,marginBottom:18,color:"#000080",textAlign:"center"},
  stepsBar:{display:"flex",justifyContent:"center",gap:8,marginBottom:20},
  step:{width:24,height:24,borderRadius:"50%",background:"#ccc",color:"#fff",fontSize:14,display:"flex",justifyContent:"center",alignItems:"center"},
  stepActive:{background:"#000080"},
  input:{width:"100%",padding:10,marginBottom:12,borderRadius:6,border:"1px solid #ccc",fontSize:14},
  label:{marginBottom:6,fontWeight:"bold"},
  review:{maxHeight:240,overflowY:"auto"},
  btnRow:{marginTop:10,display:"flex",justifyContent:"flex-end",gap:8},
  btnBlue:{background:"#000080",color:"#fff",border:"none",padding:"10px 20px",borderRadius:6,cursor:"pointer"},
  btnGrey:{background:"#bbb",color:"#000",border:"none",padding:"10px 20px",borderRadius:6,cursor:"pointer"},
};

export default RequestModal;
